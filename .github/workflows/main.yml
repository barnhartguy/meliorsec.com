name: Build and deploy website

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 0.64.1
          extended: true

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          remote: true
          fetch-depth: 0

      - name: Build site
        run: hugo --minify

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: ./public
      # - name: Purge Cloudflare Cache
      #   if: github.ref == 'refs/heads/master'
      #   env:
      #     CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
      #     CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      #   shell: sh
      #   run: |
      #     HTTP_RESPONSE=$(curl -sS "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE}/purge_cache" \
      #                 -H "Content-Type: application/json" \
      #                 -H "Authorization: Bearer ${CLOUDFLARE_TOKEN}" \
      #                 -w "HTTP_STATUS:%{http_code}" \
      #                 --data '{"purge_everything":true}')
      #     HTTP_BODY=$(echo "${HTTP_RESPONSE}" | sed -E 's/HTTP_STATUS\:[0-9]{3}$//')
      #     HTTP_STATUS=$(echo "${HTTP_RESPONSE}" | tr -d '\n' | sed -E 's/.*HTTP_STATUS:([0-9]{3})$/\1/')                      
      #     if [ "${HTTP_STATUS}" -eq "200" ]; then
      #       echo "Successfully purged!"
      #       exit 0
      #     else
      #       echo "Purge failed. API response was: "
      #       echo "${HTTP_BODY}"
      #       exit 1
      #     fi



